@model WhiteAura.Models.Blog

@{
    Layout = "~/Views/Shared/_Admin.cshtml";
    ViewBag.Title = "Edit Blog";
}
<br />
<br />
<div class="container">
    <h2>Edit Memory</h2>

    @using (Html.BeginForm("EditBlog", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ID)

<div class="form-container">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <!-- Title Field -->
    <div class="form-group">
        @Html.LabelFor(model => model.Title, new { @class = "form-label" })
        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
    </div>

    <!-- Content Field -->
    <div class="form-group">
        @Html.LabelFor(model => model.Content, new { @class = "form-label" })
        @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control", rows = 5, style = "width: 100%;" } })
        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
    </div>
    <!-- Content Field -->
    <div class="form-group">
        @Html.LabelFor(model => model.BlogCont, new { @class = "form-label" })
        @Html.TextAreaFor(model => model.BlogCont, new { htmlAttributes = new { @class = "form-control", rows = 5, style = "width: 100%;" } })
        @Html.ValidationMessageFor(model => model.BlogCont, "", new { @class = "text-danger" })
    </div>


    <!-- Main Image Field -->
    <div class="form-group">
        @Html.LabelFor(model => model.Image, "Main Image", new { @class = "form-label" })
        <input type="file" name="imageFile" class="form-control" />
        @Html.ValidationMessage("imageFile", "", new { @class = "text-danger" })

        <!-- Display the current image name if it exists -->
        <div class="current-image">
            @if (!string.IsNullOrEmpty(Model.Image))
            {
                <p>Current Main Image: @Model.Image</p>
            }
            else
            {
                <p>No main image uploaded.</p>
            }
        </div>
    </div>

    <!-- Additional Images -->
    @for (int i = 1; i <= 4; i++)
    {
        <div class="form-group">
            @Html.Label("img" + i, "Additional Image " + i, new { @class = "form-label" })
            <input type="file" name="imgFiles" class="form-control" />
            @{
                var currentImageName = Model.GetType().GetProperty("img" + i)?.GetValue(Model, null) ?? "No image uploaded";
            }
            <p>Current Image: @currentImageName</p>
            @Html.ValidationMessage("img" + i, "", new { @class = "text-danger" })
        </div>
    }

    <div class="form-actions">
        <input type="submit" value="Save Changes" class="btn btn-primary" />
    </div>
</div>
    }

    <div class="back-link">
        @Html.ActionLink("Back to Blog List", "Blog", new { area = "" }, new { @class = "btn btn-secondary" })
    </div>
</div>

<style>
    body {
        font-family: 'Lato', sans-serif;
        margin: 0;
        padding: 0;
    }

    .container {
        max-width: 1000px;
        margin: 0 auto;
        padding: 15px;
    }

    h2 {
        font-size: 26px;
        margin: 20px 0;
        text-align: center;
    }

    .form-container {
        background-color: #ffffff;
        box-shadow: 0px 0px 9px 0px rgba(0, 0, 0, 0.1);
        border-radius: 3px;
        padding: 25px;
        margin-bottom: 25px;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-label {
        display: block;
        font-weight: bold;
        margin-bottom: 5px;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
    }

    .btn {
        display: inline-block;
        padding: 10px 20px;
        font-size: 16px;
        font-weight: bold;
        text-align: center;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .btn-primary {
        background-color: #007bff;
        color: #ffffff;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .btn-secondary {
        background-color: #6c757d;
        color: #ffffff;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
        }

    .back-link {
        text-align: center;
        margin-top: 20px;
    }

    .current-image {
        margin-top: 10px;
        font-size: 14px;
        color: #666;
    }

    .img-thumbnail {
        margin-right: 10px;
    }
    textarea#BlogCont {
        width: 100%;
    }

    textarea#Content {
        width: 100%;
    }
    .form-control {
        height: calc(1.5em + 1.75rem + 2px);
    }
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js" integrity="sha512-AA1Bzp5Q0K1KanKKmvN/4d3IRKVlv9PYgwFPvm32nPO6QS8yH1HO7LbgB1pgiOxPtfeg5zEn2ba64MUcqJx6CA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('form').submit(function (e) {
                e.preventDefault(); // Prevent default form submission

                var formData = new FormData(this); // Create FormData object to handle file uploads
                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        if (response.success) {
                            // Show SweetAlert success notification
                            swal({
                                title: "Success!",
                                text: response.message,
                                icon: "success",
                                button: "OK",
                            }).then(() => {
                                // Redirect to Blog list
                                window.location.href = '@Url.Action("Blog", "Admin")';
                            });
                        } else {
                            // Show SweetAlert error notification
                            swal({
                                title: "Error!",
                                text: response.message,
                                icon: "error",
                                button: "OK",
                            });
                        }
                    },
                    error: function () {
                        // Show SweetAlert unexpected error notification
                        swal({
                            title: "Error!",
                            text: "An unexpected error occurred.",
                            icon: "error",
                            button: "OK",
                        });
                    }
                });
            });
        });
    </script>
}
