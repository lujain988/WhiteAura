@model WhiteAura.Models.Blog

@{
    Layout = "~/Views/Shared/_Admin.cshtml";
    ViewBag.Title = "Create New Blog";
}
<br /><br />
<div class="container">
    <h2>Create New Blog</h2>

    @using (Html.BeginForm("CreateBlog", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", id = "createBlogForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-container">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <!-- Title Field -->
            <div class="form-group">
                @Html.LabelFor(model => model.Title, "Title", new { @class = "form-label" })
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>

            <!-- Content Field -->
            <div class="form-group">
                @Html.LabelFor(model => model.Content, new { @class = "form-label" })
                @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control", required = "required", rows = 8 } }) <!-- Increased rows -->
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>

            <!-- Blog Content Field -->
            <div class="form-group">
                @Html.LabelFor(model => model.BlogCont, "Blog Content", new { @class = "form-label" })
                @Html.TextAreaFor(model => model.BlogCont, new { htmlAttributes = new { @class = "form-control", required = "required", rows = 8 } }) <!-- Increased rows -->
                @Html.ValidationMessageFor(model => model.BlogCont, "", new { @class = "text-danger" })
            </div>

            <!-- Main Image Field -->
            <div class="form-group">
                @Html.LabelFor(model => model.Image, new { @class = "form-label" })
                @Html.TextBox("Image", null, new { type = "file", @class = "form-control", required = "required" })
                @Html.ValidationMessage("Image", "", new { @class = "text-danger" })
            </div>

            <!-- Additional Image Fields -->
            @RenderImageField(1)
            @RenderImageField(2)
            @RenderImageField(3)
            @RenderImageField(4)

            <!-- Submit Button -->
            <div class="form-actions">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    }

    <div class="back-link">
        @Html.ActionLink("Back to List", "Blog", "Admin", null, new { @class = "btn btn-secondary" })
    </div>
</div>

@helper RenderImageField(int index)
{
    <div class="form-group">
        @Html.Label($"img{index}", $"Image {index}", new { @class = "form-label" })
        @Html.TextBox($"img{index}", null, new { type = "file", @class = "form-control" })
        @Html.ValidationMessage($"img{index}", "", new { @class = "text-danger" })
    </div>
}

@section Styles {
    <style>
        body {
            font-family: 'Lato', sans-serif;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 15px;
        }

        h2 {
            font-size: 26px;
            margin: 20px 0;
            text-align: center;
        }

        .form-container {
            background-color: #ffffff;
            box-shadow: 0px 0px 9px 0px rgba(0, 0, 0, 0.1);
            border-radius: 3px;
            padding: 25px;
            margin-bottom: 25px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-label {
            display: block;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .form-control {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        .btn {
            display: inline-block;
            padding: 10px 20px;
            font-size: 16px;
            font-weight: bold;
            text-align: center;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .btn-primary {
            background-color: #007bff;
            color: #ffffff;
        }

            .btn-primary:hover {
                background-color: #0056b3;
            }

        .btn-secondary {
            background-color: #6c757d;
            color: #ffffff;
        }

            .btn-secondary:hover {
                background-color: #5a6268;
            }

        .back-link {
            text-align: center;
            margin-top: 20px;
        }

        .form-control {
            height: auto; /* Allow the height to adjust based on content */
        }
        textarea#BlogCont {
            width: 100%;
        }
        textarea#Content {
            width: 100%;
        }
    </style>
}

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js" integrity="sha512-AA1Bzp5Q0K1KanKKmvN/4d3IRKVlv9PYgwFPvm32nPO6QS8yH1HO7LbgB1pgiOxPtfeg5zEn2ba64MUcqJx6CA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        $(document).ready(function () {
            $('#createBlogForm').on('submit', function (e) {
                e.preventDefault(); // Prevent default form submission
                var form = $(this)[0]; // Get the raw form element
                var formData = new FormData(form); // Create FormData object

                $.ajax({
                    url: $(form).attr('action'), // Ensure this action URL points to your create blog action
                    type: 'POST',
                    data: formData,
                    contentType: false, // Required for file upload
                    processData: false, // Required for file upload
                    success: function (response) {
                        if (response.success) {
                            // Simple SweetAlert success message
                            swal("Success!", response.message, "success").then(() => {
                                // Redirect to the blog list after success
                                window.location.href = '@Url.Action("Blog", "Admin")';
                            });
                        } else {
                            // Simple SweetAlert error message
                            swal("Error!", response.message, "error");
                        }
                    },
                    error: function (xhr) {
                        let errorMessage = xhr.responseJSON ? xhr.responseJSON.message : 'There was an error creating the blog.';
                        swal("Error!", errorMessage, "error");
                    }
                });
            });
        });
    </script>
}
