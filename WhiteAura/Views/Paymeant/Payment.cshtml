@model WhiteAura.Models.Booking
@{
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<br />
<br />

<div class="container mt-5">
    <div class="card shadow-lg">
        <div class="card-body">
            <h1 class="mb-4 text-center text-black">Confirm Your Booking and Payment</h1>

            <!-- Booking Details -->
            <h2 class="mt-4 mb-3 text-secondary">Booking Details</h2>
            <div class="row">
                <div class="col-md-4 mb-3">
                    <label class="form-label">User Name</label>
                    <input type="text" class="form-control" value="@Model.User.FullName" readonly>
                </div>
                <div class="col-md-4 mb-3">
                    <label class="form-label">Service Name</label>
                    <input type="text" class="form-control" value="@Model.Service.ServiceName" readonly>
                </div>
                <div class="col-md-4 mb-3">
                    <label class="form-label">Number of Guest</label>
                    <input type="text" class="form-control" value="@Model.Service.NumbeOfGuests" readonly>
                </div>
                <div class="col-md-4 mb-3">
                    <label class="form-label">Booking Date</label>
                    <input type="text" class="form-control"
                           value="@(@Model.BookingDate.HasValue ? @Model.BookingDate.Value.ToString("MM/dd/yyyy HH:mm", System.Globalization.CultureInfo.InvariantCulture) : "")"
                           readonly>
                </div>
                <div class="col-md-4 mb-3">
                    <label class="form-label">Total Amount (USD)</label>
                    <input type="text" class="form-control"
                           value="@(@Model.Service.Price.HasValue ? Model.Service.Price.Value.ToString("F2", System.Globalization.CultureInfo.InvariantCulture) : "0.00")"
                           readonly>
                </div>
            </div>
            <!-- 10% Payment Notification -->
            <div class="alert alert-info mt-4" role="alert">
                You will only pay <strong>10%</strong> of the total amount, which is
                <strong>@(@Model.Service.Price.HasValue ? (@Model.Service.Price.Value * 0.10M).ToString("F2", System.Globalization.CultureInfo.InvariantCulture) : "0.00") USD</strong>.
            </div>
            <!-- Payment Method -->
            <h2 class="mt-4 mb-3 text-secondary">Select Payment Method</h2>
            <div id="paypal-button-container" class="mt-3"></div>
        </div>
    </div>
</div>
<br />
<br />
<style>
    /* Styling for the booking confirmation card */
    .card {
        border: none;
        border-radius: 10px;
    }

    .card-body {
        padding: 2rem;
    }

    .card h1 {
        font-weight: 700;
    }

    .form-label {
        font-weight: bold;
        color: #495057;
    }

    .form-control {
        border-radius: 5px;
        border: 1px solid #ced4da;
        background-color: #f8f9fa;
    }

    /* Customize input fields */
    input[type="text"] {
        background-color: #e9ecef;
        color: #495057;
        font-weight: 500;
    }

    /* Payment button styles */
    #paypal-button-container {
        max-width: 400px;
        margin: auto;
    }

    /* Adding shadow and hover effects to enhance the card's appearance */
    .card {
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .card:hover {
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
    }

    /* Heading styles */
    h2 {
        font-size: 1.5rem;
        font-weight: 600;
    }

    h1 {
        font-size: 2.2rem;
        color: #007bff;
    }

    /* Container styles */
    .container {
        max-width: 800px;
        margin-top: 3rem;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .container {
            margin-top: 1.5rem;
        }

        h1 {
            font-size: 1.8rem;
        }

        h2 {
            font-size: 1.3rem;
        }

        .form-control {
            font-size: 0.9rem;
        }
    }
</style>

<script src="https://www.paypal.com/sdk/js?client-id=AfMsQi5UnaC5JCH55LaSR5mqiXgCxiCQl9i5fH1tLLzMjMY_CAcCq_bW0Jng3unAhxZRemIi8ckcHDVT&currency=USD"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
let selectedPaymentMethod = "PayPal"; // Default to PayPal

paypal.Buttons({
    onClick: function(data, actions) {
        if (data.fundingSource === 'card') {
            selectedPaymentMethod = "Credit Card";
        }
        return actions.resolve();
    },

    createOrder: function(data, actions) {
        // Calculate 10% of the total amount
        const totalAmount = @(Model.Service.Price.HasValue ? Model.Service.Price.Value.ToString("F2", System.Globalization.CultureInfo.InvariantCulture) : "0.00");
        const paymentAmount = (totalAmount * 0.10).toFixed(2); // Only charge 10%
        return actions.order.create({
            purchase_units: [{
                amount: {
                    value: paymentAmount // Use only 10% of the service price
                }
            }]
        });
    },

    onApprove: function(data, actions) {
        return actions.order.capture().then(function(details) {
            const totalAmount = @(Model.Service.Price.HasValue ? Model.Service.Price.Value.ToString("F2", System.Globalization.CultureInfo.InvariantCulture) : "0.00");
            const remainingAmount = (totalAmount * 0.90).toFixed(2); // Remaining 90%

            return fetch('@Url.Action("Success", "Paymeant")', {
                method: 'post',
                headers: {
                    'content-type': 'application/json'
                },
                body: JSON.stringify({
                    bookingId: @(Model.ID),
                    orderID: data.orderID,
                    paymentMethod: selectedPaymentMethod
                })
            }).then(function(response) {
                return response.json();
            }).then(function(result) {
                if (result.success) {
                    Swal.fire({
                        title: 'Success!',
                        text: 'Your payment of 10% has been processed successfully! Please note that 90% of the total amount ($' + remainingAmount + ') will be paid at the location.',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '@Url.Action("Index", "Home")'; // Redirect after confirmation
                        }
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: 'There was a problem processing your booking. Please try again.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            });
        });
    },

    onError: function(err) {
        console.log('PayPal Error:', err);
        Swal.fire({
            title: 'Error',
            text: 'An error occurred during the transaction. Please try again.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    }
}).render('#paypal-button-container');
</script>
